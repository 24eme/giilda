/*---------------------------------------------------
		LESS Elements 0.4
	---------------------------------------------------
		A set of useful LESS mixins by Dmitry Fadeyev
		Special thanks for mixin suggestions to:
			Kris Van Herzeele,
			Benoit Adam,
			Portenart Emile-Victor
			
		More info at: http://lesselements.com
-----------------------------------------------------*/

/**
 * CSS 3
 ******************************************/
.bg-gradient(@color: #f5f5f5, @start: 0, @stop: 255)
{
	background: @color;
	background: -webkit-gradient(linear,
				 left bottom,
				 left top,
				 color-stop(0, rgb(@start,@start,@start)),
				 color-stop(1, rgb(@stop,@stop,@stop)));
	background: -moz-linear-gradient(center bottom,
				 rgb(@start,@start,@start) 0%,
				 rgb(@stop,@stop,@stop) 100%);
}

.border(@color: #000) { border: 1px solid @color; }
.border-left(@color: #000) { border-left: 1px solid @color; }
.border-top(@color: #000) { border-top: 1px solid @color; }
.border-right(@color: #000) { border-right: 1px solid @color; }
.border-bottom(@color: #000) { border-bottom: 1px solid @color; }

.box-shadow(@shadow: 0)
{
	-webkit-box-shadow: @shadow;
	   -moz-box-shadow: @shadow;
	        box-shadow: @shadow;
}

.border-radius(@radius: 5px)
{
	-webkit-border-radius: @radius;
	   -moz-border-radius: @radius;
	        border-radius: @radius;
}

.border-radius(@radius: 5px)
{
	-webkit-border-radius: @radius;
	   -moz-border-radius: @radius;
	        border-radius: @radius;
}

.box-sizing(@type: border-box)
{ 
	-webkit-box-sizing: @type;
	   -moz-box-sizing: @type;
	        box-sizing: @type;
}

.opacite(@opacite: 0.5)
{
	-webkit-opacity: @opacite;
	 -khtml-opacity: @opacite;
	   -moz-opacity: @opacite;
	        opacity: @opacite;
}

.transition-duration(@duration: 0.2s)
{
	-webkit-transition-duration: @duration;
	   -moz-transition-duration: @duration;
	        transition-duration: @duration;
}

.rotation(@deg:5deg)
{ 
	-webkit-transform: rotate(@deg);
	   -moz-transform: rotate(@deg);
	        transform: rotate(@deg);
}

.scale(@ratio:1.5)
{
	-webkit-transform:scale(@ratio);
	   -moz-transform:scale(@ratio);
	        transform:scale(@ratio);
}

.transition(@property:all, @duration:0.2s, @ease:ease-in)
{
	-webkit-transition: @property @duration @ease;
	   -moz-transition: @property @duration @ease;
	        transition: @property @duration @ease;
}

.inner-shadow(@horizontal:0, @vertical:1px, @blur:2px, @alpha: 0.4)
{
	-webkit-box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
	   -moz-box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
	        box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
}

.box-shadow(@arguments)
{
	-webkit-box-shadow: @arguments;
	   -moz-box-shadow: @arguments;
	        box-shadow: @arguments;
}

.text-shadow(@arguments)
{
	-webkit-text-shadow: @arguments;
	   -moz-text-shadow: @arguments;
	        text-shadow: @arguments;
}


.columns(@colwidth: 250px, @colcount: 0, @colgap: 50px, @columnRuleColor: #eee, @columnRuleStyle: solid, @columnRuleWidth: 1px)
{
	-webkit-column-width: @colwidth;
	-webkit-column-count: @colcount;
	-webkit-column-gap: @colgap;
	-webkit-column-rule-color: @columnRuleColor;
	-webkit-column-rule-style: @columnRuleStyle;
	-webkit-column-rule-width: @columnRuleWidth;
	   -moz-column-width: @colwidth;
	   -moz-column-count: @colcount;
	   -moz-column-gap: @colgap;
	   -moz-column-rule-color: @columnRuleColor;
	   -moz-column-rule-style: @columnRuleStyle;
	   -moz-column-rule-width: @columnRuleWidth;
	        column-width: @colwidth;
	        column-count: @colcount;
	        column-gap: @colgap;
	        column-rule-color: @columnRuleColor;
	        column-rule-style: @columnRuleStyle;
	        column-rule-width: @columnRuleWidth;
}

.box-dimensions(@width, @height)
{
	height: @height;
	width: @width;
}

.box(@width, @height, @margin, @padding)
{
	.box-dimensions(@width, @height);
	margin: @margin;
	padding: @padding;
}

.pos-abs(@top: auto, @right: auto, @bottom: auto, @left: auto)
{
	bottom: @bottom;
	left: @left;
	position: absolute;
	right: @right;
	top: @top;
}

.font-size-em(@cible: 10, @contexte: 10)
{
	font-size: (@cible / @contexte) + 0em;
}

.line-height(@cible: 12, @contexte: 10)
{
	line-height: (@cible / @contexte) + 0;
}

.majuscules { text-transform: uppercase; }

.img-block { a, img { display: block; } }

.inline-block-spacing(@spacing: -4px)
{
	letter-spacing: @spacing;
    word-spacing: @spacing;
}

.inline-block-ie
{
	display: inline-block;
	
	.ielt8 &
	{	
		display: inline;
		.z1;
	}
}

.clear-box-top
{
	border-top: 0;
	margin-top: 0;
	padding-top: 0;
}

.clear-box-bottom
{
	border-bottom: 0;
	margin-bottom: 0;
	padding-bottom: 0;
}

.clear-box-left
{
	border-left: 0;
	margin-left: 0;
	padding-left: 0;
}

.clear-box-right
{
	border-right: 0;
	margin-right: 0;
	padding-right: 0;
}

.clearfix
{
	.z1;
	
	min-height: 1px;
	
	&:before,
	&:after
	{
		content: "\0020";
		display: block;
		font-size: 0;
		height: 0;
		visibility: hidden; 
	}
	
	&:after { clear: both; }
}

.square(@cote: 1px)
{
	.box-dimensions(@cote, @cote);
}

/* ============================================================= */
/* TRIANGLES */
/* ============================================================= */
.triangle(@width: 0, @color: #000)
{
	.square(0px);
	border-style: solid;
	border-width: @width;
	border-color: @color;
	content: '';
	display: inline-block;
}

.triangle-tl(@width: 0, @height: 0, @color: #000)
{
	.triangle(@width @width 0 0, @color transparent transparent);
}

.triangle-t(@width: 0, @height: 0, @color: #000)
{
	.triangle(0 (@width / 2) @height, transparent transparent @color);
}

.triangle-tr(@width: 0, @height: 0, @color: #000)
{
	.triangle(0 @width @width 0, transparent @color transparent transparent);
}

.triangle-r(@width: 0, @height: 0, @color: #000)
{
	.triangle((@width / 2) 0 (@width / 2) @height, transparent transparent transparent @color);
}

.triangle-br(@width: 0, @height: 0, @color: #000)
{
	.triangle(0 0 @width @width, transparent transparent @color);
}

.triangle-b(@width: 0, @height: 0, @color: #000)
{
	.triangle(@height (@width / 2) 0, @color transparent transparent);
}

.triangle-bl(@width: 0, @height: 0, @color: #000)
{
	.triangle(@width 0 0 @width, transparent transparent transparent @color);
}

.triangle-l(@width: 0, @height: 0, @color: #000)
{
	.triangle((@width / 2) @height (@width / 2) 0, transparent @color transparent transparent);
}
